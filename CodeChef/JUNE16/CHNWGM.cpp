#include <bits/stdc++.h>

using namespace std;

struct block
{
	int x;
	int y;
};

int A[20][5][5];
block F[20];
int G[10][10];

void init();
void clean();

int main()
{
	init();	

	while(1)
	{
		int I[3];
		for(int i=0;i<3;i++)
			cin>>I[i];

		if(I[0] == -1)
			break;

		int M[3][3];
		for(int i=0;i<3;i++)
			for(int j=0;j<3;j++)
				M[i][j] = -1;

		int k = 0;
 		for(int l=0;l<3 && k<3;l++)
		{
			for(int b=0;b<3 && k<3;b++)
			{
				if(I[b])
				{
					int n = I[b];
					int f = 0;
					for(int i=0;i<(10-F[n].y+1);i++)
					{
						for(int j=0;j<(10-F[n].x+1);j++)
						{
							f = 0;
							for(int bi=0;bi<F[n].y;bi++)
							{
								for(int bj=0;bj<F[n].x;bj++)
									f += G[i+bi][j+bj] & A[n][bi][bj];
							}
							if(f == 0)
							{
								M[k][0] = b + 1;
								M[k][1] = i + F[n].y;
								M[k][2] = j + 1;
								for(int bi=0;bi<F[n].y;bi++)
									for(int bj=0;bj<F[n].x;bj++)
										G[i+bi][j+bj] = 1;

								I[b] = 0;
								k++;
								clean();
								break;
							}
						}
						if(f == 0)
							break;
					}
				}
			}
		}

		for(int i=0;i<3;i++)
			for(int j=0;j<3;j++)
				printf("%d ",M[i][j]);
		printf("\n");
		fflush(stdout);
		if(M[2][0] == -1)
			break;
	}
}

void init()
{
	memset(A,0,sizeof(A));
	memset(G,0,sizeof(G));

	F[1].x = 1;
	F[1].y = 1;
	A[1][0][0] = 1;

	F[2].x = 1;
	F[2].y = 2;
	A[2][0][0] = 1;
	A[2][1][0] = 1;
	
	F[3].x = 2;
	F[3].y = 1;
	A[3][0][0] = 1;
	A[3][0][1] = 1;
	
	F[4].x = 1;
	F[4].y = 3;	
	A[4][0][0] = 1;
	A[4][1][0] = 1;
	A[4][2][0] = 1;

	F[5].x = 3;
	F[5].y = 1;
	A[5][0][0] = 1;
	A[5][0][1] = 1;
	A[5][0][2] = 1;

	F[6].x = 1;
	F[6].y = 4;
	A[6][0][0] = 1;
	A[6][1][0] = 1;
	A[6][2][0] = 1;
	A[6][3][0] = 1;
	
	F[7].x = 4;
	F[7].y = 1;
	A[7][0][0] = 1;
	A[7][0][1] = 1;
	A[7][0][2] = 1;
	A[7][0][3] = 1;

	F[8].x = 1;
	F[8].y = 5;
	A[8][0][0] = 1;
	A[8][1][0] = 1;
	A[8][2][0] = 1;
	A[8][3][0] = 1;
	A[8][4][0] = 1;

	F[9].x = 5;
	F[9].y = 1;
	A[9][0][0] = 1;
	A[9][0][1] = 1;
	A[9][0][2] = 1;
	A[9][0][4] = 1;
	A[9][0][3] = 1;

	F[10].x = 2;
	F[10].y = 2;
	A[10][0][0] = 1;
	A[10][0][1] = 1;
	A[10][1][0] = 1;
	A[10][1][1] = 1;

	F[11].x = 3;
	F[11].y = 3;
	A[11][0][0] = 1;
	A[11][0][1] = 1;
	A[11][0][2] = 1;
	A[11][1][0] = 1;
	A[11][1][1] = 1;
	A[11][1][2] = 1;
	A[11][2][0] = 1;
	A[11][2][1] = 1;
	A[11][2][2] = 1;

	F[12].x = 3;
	F[12].y = 3;
	A[12][0][0] = 1;
	A[12][0][1] = 1;
	A[12][0][2] = 1;
	A[12][1][2] = 1;
	A[12][2][2] = 1;

	F[13].x = 3;
	F[13].y = 3;
	A[13][0][2] = 1;
	A[13][1][2] = 1;
	A[13][2][2] = 1;
	A[13][2][1] = 1;
	A[13][2][0] = 1;

	F[14].x = 3;
	F[14].y = 3;
	A[14][0][0] = 1;
	A[14][1][0] = 1;
	A[14][2][0] = 1;
	A[14][2][1] = 1;
	A[14][2][2] = 1;

	F[15].x = 3;
	F[15].y = 3;
	A[15][0][0] = 1;
	A[15][1][0] = 1;
	A[15][2][0] = 1;
	A[15][0][1] = 1;
	A[15][0][2] = 1;

	F[16].x = 2;
	F[16].y = 2;
	A[16][0][0] = 1;
	A[16][0][1] = 1;
	A[16][1][0] = 1;

	F[17].x = 2;
	F[17].y = 2;
	A[17][0][0] = 1;
	A[17][0][1] = 1;
	A[17][1][1] = 1;

	F[18].x = 2;
	F[18].y = 2;
	A[18][0][1] = 1;
	A[18][1][1] = 1;
	A[18][1][0] = 1;

	F[19].x = 2;
	F[19].y = 2;
	A[19][0][0] = 1;
	A[19][1][0] = 1;
	A[19][1][1] = 1;
}

void clean()
{
	int R[10];
	memset(R,0,sizeof(R));
	int C[10];
	memset(C,0,sizeof(C));

	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
		{
			R[i] += G[i][j];
			C[j] += G[i][j];
		}
	}

	for(int i=0;i<10;i++)
	{
		if(R[i] == 10)
		{
			for(int j=0;j<10;j++)
				G[i][j] = 0;
		}
	}

	for(int j=0;j<10;j++)
	{
		if(C[j] == 10)
		{
			for(int i=0;i<10;i++)
				G[i][j] = 0;
		}
	}
}